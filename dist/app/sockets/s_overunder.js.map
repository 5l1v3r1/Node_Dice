{"version":3,"sources":["../../../src/app/sockets/s_overunder.js"],"names":["config","require","uuid","userHelper","betHelper","rollDice","_","gameName","module","exports","io","on","socket","join","session","handshake","clientBet","GetUserById","userid","err","u","emit","clientSalt","error","isNumber","w","code","getBalance","coinName","nonce","num","serverSalt","bet","amount","selNum","sn","unit","betTime","Date","rollNum","betId","v4","save","console","addProfit","GetProfit","to","GetBetsByUser","bets","GetAllBets","payout"],"mappings":"AAAC;;;;;AAKD;;AAEA,IAAIA,SAASC,QAAQ,cAAR,CAAb;AAAA,IACIC,OAAOD,QAAQ,WAAR,CADX;AAAA,IAEIE,aAAaF,QAAQ,sBAAR,CAFjB;AAAA,IAGIG,YAAYH,QAAQ,qBAAR,CAHhB;AAAA,IAIII,WAAWJ,QAAQ,sBAAR,CAJf;AAAA,IAKIK,IAAIL,QAAQ,QAAR,CALR;AAAA,IAMIM,WAAW,WANf;;AAQAC,OAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAc;;AAG3BA,OAAGC,EAAH,CAAM,YAAN,EAAoB,UAAUC,MAAV,EAAkB;;AAElCA,eAAOC,IAAP,CAAYN,QAAZ;;AAEA,YAAIO,UAAUF,OAAOG,SAAP,CAAiBD,OAA/B;AACA;AACAF,eAAOD,EAAP,CAAU,MAAV,EAAkB,UAAUK,SAAV,EAAqB;;AAEnCb,uBAAWc,WAAX,CAAuBH,QAAQI,MAA/B,EAAuC,mCAAvC,EAA4E,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AAC1F,oBAAID,GAAJ,EACIP,OAAOS,IAAP,CAAY,MAAZ,EAAoB,EAAEC,YAAY,EAAd,EAAkBC,OAAOJ,GAAzB,EAApB,EADJ,KAEK;;AAED;AACA,wBAAI,CAACb,EAAEkB,QAAF,CAAWR,UAAUS,CAAV,GAAY,CAAvB,CAAL,EAAgC;AAC5Bb,+BAAOS,IAAP,CAAY,YAAZ,EAA0B,EAAEK,MAAM,CAAC,CAAT,EAA1B;AACA;AACH;;AAED,wBAAIV,UAAUS,CAAV,IAAe,CAAnB,EAAsB;AAClBb,+BAAOS,IAAP,CAAY,YAAZ,EAA0B,EAAEK,MAAM,CAAC,CAAT,EAA1B;AACA;AACH;AACD,wBAAIN,EAAEO,UAAF,CAAaX,UAAUY,QAAvB,IAAmCZ,UAAUS,CAAjD,EAAoD;AAAC;AACjDb,+BAAOS,IAAP,CAAY,YAAZ,EAA0B,EAAEK,MAAM,CAAC,CAAT,EAA1B;AACA;AACH;;AAED;AACAN,sBAAES,KAAF;;AAEA;AACA,wBAAIC,MAAMzB,SAASe,EAAEW,UAAX,EAAuBX,EAAEE,UAAF,GAAe,GAAf,GAAqBF,EAAES,KAA9C,CAAV;AACA,wBAAIG,MAAM,IAAI5B,SAAJ,CAAc;AACpBc,gCAAQJ,QAAQI,MADI;AAEpBI,oCAAYF,EAAEE,UAFM;AAGpBS,oCAAYX,EAAEW,UAHM;AAIpBF,+BAAOT,EAAES,KAJW;AAKpBI,gCAAQjB,UAAUS,CALE;AAMpBS,gCAAQlB,UAAUmB,EANE;AAOpBC,8BAAMpB,UAAUY,QAPI;AAQpBS,iCAAS,IAAIC,IAAJ,EARW;AASpBC,iCAAST,GATW;AAUpBU,+BAAOtC,KAAKuC,EAAL;AAVa,qBAAd,CAAV;AAYAT,wBAAIU,IAAJ,CAAS,UAAUvB,GAAV,EAAe;AACpB,4BAAIA,GAAJ,EAAS,OAAOwB,QAAQpB,KAAR,CAAc,sBAAsBJ,GAApC,CAAP;AACZ,qBAFD;AAGA;AACAC,sBAAEwB,SAAF,CAAY5B,UAAUY,QAAtB,EAAgCiB,UAAUb,IAAIO,OAAd,EAAuBP,IAAIE,MAA3B,EAAmCF,IAAIC,MAAvC,CAAhC;AACAb,sBAAEsB,IAAF,CAAO,UAAUvB,GAAV,EAAe;AAClB,4BAAIA,GAAJ,EAAS,OAAOwB,QAAQpB,KAAR,CAAc,iCAAiCJ,GAA/C,CAAP;AACZ,qBAFD;AAGA;AACAT,uBAAGoC,EAAH,CAAMvC,QAAN,EAAgBc,IAAhB,CAAqB,SAArB,EAAgC;AAC5BH,gCAAQJ,QAAQI,MADY;AAE5BqB,iCAAST,GAFmB;AAG5BD,+BAAOT,EAAES,KAHmB;AAI5BQ,iCAASL,IAAIK,OAJe;AAK5BH,gCAAQF,IAAIE,MALgB;AAM5BD,gCAAQD,IAAIC,MANgB;AAO5BG,8BAAMJ,IAAII;AAPkB,qBAAhC;AASH;AACJ,aAxDD;AAyDH,SA3DD;;AA6DAxB,eAAOD,EAAP,CAAU,WAAV,EAAuB,YAAY;AAC/BP,sBAAU2C,aAAV,CAAwBjC,QAAQI,MAAhC,EAAwC,UAAUC,GAAV,EAAe6B,IAAf,EAAqB;AACzD,oBAAI7B,GAAJ,EAAS,OAAOwB,QAAQpB,KAAR,CAAc,yBAAyBJ,GAAvC,CAAP;AACTP,uBAAOS,IAAP,CAAY,WAAZ,EAAyB2B,IAAzB;AACH,aAHD;AAIH,SALD;;AAOApC,eAAOD,EAAP,CAAU,YAAV,EAAwB,YAAY;AAChCP,sBAAU6C,UAAV,CAAqB,UAAU9B,GAAV,EAAe6B,IAAf,EAAqB;AACtC,oBAAI7B,GAAJ,EAAS,OAAOwB,QAAQpB,KAAR,CAAc,sBAAsBJ,GAApC,CAAP;AACTP,uBAAOS,IAAP,CAAY,YAAZ,EAA0B2B,IAA1B;AACH,aAHD;AAIH,SALD;;AAQA;AACA,iBAASH,SAAT,CAAmBN,OAAnB,EAA4BL,MAA5B,EAAoCD,MAApC,EAA4C;AACxC,gBAAIiB,SAAShB,UAAU,IAAV,GAAgB,KAAKA,MAArB,GAA4B,MAAM,MAAMA,MAAZ,CAAzC;AACA,gBAAKA,SAAS,CAAT,IAAc,IAAd,IAAsBK,UAAU,CAAV,IAAeL,SAAS,CAA/C,IACCA,SAAS,CAAT,IAAc,IAAd,IAAsBK,UAAU,CAAV,IAAeL,SAAS,CADnD,EACuD;AACnD,uBAAOD,UAAUiB,SAAS,CAAnB,CAAP;AACH,aAHD,MAIK;AACF,uBAAO,CAAC,CAAD,GAAKjB,MAAZ;AACF;AACJ;AACJ,KA7FD;AA8FH,CAjGD","file":"s_overunder.js","sourcesContent":["ï»¿/**\r\n * Copyright 2014 Node Dice\r\n *\r\n * Created by Neo on 2014/11/27.\r\n */\r\n'use strict';\r\n\r\nvar config = require(\"../../config\"),\r\n    uuid = require('node-uuid'),\r\n    userHelper = require('../helper/userHelper'),\r\n    betHelper = require('../helper/betHelper'),\r\n    rollDice = require('../helper/cryptoroll'),\r\n    _ = require('lodash'),\r\n    gameName = 'overunder';\r\n\r\nmodule.exports = function (io) {\r\n    \r\n    \r\n    io.on('connection', function (socket) {\r\n        \r\n        socket.join(gameName);\r\n        \r\n        var session = socket.handshake.session;\r\n        //return a \r\n        socket.on('roll', function (clientBet) {\r\n            \r\n            userHelper.GetUserById(session.userid, \"clientSalt serverSalt nonce funds\", function (err, u) {\r\n                if (err)\r\n                    socket.emit('roll', { clientSalt: '', error: err });\r\n                else {\r\n                    \r\n                    //validate input\r\n                    if (!_.isNumber(clientBet.w-0)) { \r\n                        socket.emit('rollResult', { code: -3 });\r\n                        return;\r\n                    }\r\n\r\n                    if (clientBet.w <= 0) {\r\n                        socket.emit('rollResult', { code: -2 });\r\n                        return;\r\n                    }\r\n                    if (u.getBalance(clientBet.coinName) < clientBet.w) {// not enough fund\r\n                        socket.emit('rollResult', { code: -1 });\r\n                        return;\r\n                    }\r\n\r\n                    //increase nonce\r\n                    u.nonce++;\r\n                   \r\n                    //get lucky number\r\n                    var num = rollDice(u.serverSalt, u.clientSalt + '-' + u.nonce);\r\n                    var bet = new betHelper({\r\n                        userid: session.userid,\r\n                        clientSalt: u.clientSalt,\r\n                        serverSalt: u.serverSalt,\r\n                        nonce: u.nonce,\r\n                        amount: clientBet.w,\r\n                        selNum: clientBet.sn,\r\n                        unit: clientBet.coinName,\r\n                        betTime: new Date(),\r\n                        rollNum: num,\r\n                        betId: uuid.v4()\r\n                    });\r\n                    bet.save(function (err) {\r\n                        if (err) return console.error('Saving bet error:' + err);\r\n                    });\r\n                    //Todo: process bet's result here\r\n                    u.addProfit(clientBet.coinName, GetProfit(bet.rollNum, bet.selNum, bet.amount))\r\n                    u.save(function (err) {\r\n                        if (err) return console.error('Saving user\\'s profit error:' + err);\r\n                    });                                      \r\n                    //Every bet is sent to everyone who is in over/under game. \r\n                    io.to(gameName).emit('allBets', {\r\n                        userid: session.userid,\r\n                        rollNum: num, \r\n                        nonce: u.nonce, \r\n                        betTime: bet.betTime, \r\n                        selNum: bet.selNum,\r\n                        amount: bet.amount,\r\n                        unit: bet.unit\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        \r\n        socket.on('getMyBets', function () {\r\n            betHelper.GetBetsByUser(session.userid, function (err, bets) {\r\n                if (err) return console.error('GetBetsByUser error:' + err);\r\n                socket.emit('getMyBets', bets);\r\n            });\r\n        });\r\n        \r\n        socket.on('getAllBets', function () {\r\n            betHelper.GetAllBets(function (err, bets) {\r\n                if (err) return console.error('getAllBets error:' + err);\r\n                socket.emit('getAllBets', bets);\r\n            });\r\n        });\r\n\r\n\r\n        //functions\r\n        function GetProfit(rollNum, selNum, amount) { \r\n            var payout = selNum <= 49.5? 99 / selNum:99 / (100 - selNum);\r\n            if ((selNum * 1 <= 49.5 && rollNum * 1 <= selNum * 1) \r\n             || (selNum * 1 >= 50.5 && rollNum * 1 >= selNum * 1)) {\r\n                return amount * (payout - 1);\r\n            }\r\n            else {\r\n               return -1 * amount;\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}
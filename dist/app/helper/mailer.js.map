{"version":3,"sources":["../../../src/app/helper/mailer.js"],"names":["Mailer","templates","path","normalize","join","__dirname","transport","createTransport","mail","clone","options","prototype","sendTemplate","to","templateName","data","template","compiledTemplate","source","readFileSync","file","compile","send","subject","html","mailOptions","from","fromaddress","logger","require","info","JSON","stringify","extend","generateTextFromHTML","sendMail","error","response","err","module","exports"],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,GAAM;AACjB,cAAKC,SAAL,GAAiB;AACb,2BAAmB;AACf,oBAAQ,uBADO;AAEf,uBAAW;AAFI,SADN;AAKb,6BAAqB;AACjB,oBAAQ,0BADS;AAEjB,uBAAW;AAFM,SALR;AASb,+BAAuB;AACnB,oBAAQ,mCADW;AAEnB,uBAAW;AAFQ,SATV;AAab,iCAAyB;AACrB,oBAAQ,8BADa;AAErB,uBAAW;AAFU;AAbZ,KAAjB;;AAmBA,cAAKC,IAAL,GAAY,eAAKC,SAAL,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAf,CAAZ;AACA,cAAKC,SAAL,GAAiB,qBAAWC,eAAX,CAA2B,iBAAOC,IAAP,CAAYF,SAAvC,EAAkD,iBAAEG,KAAF,CAAQ,iBAAOD,IAAP,CAAYE,OAApB,KAAgC,EAAlF,CAAjB;AACH,CAtBD;;AAwBAV,OAAOW,SAAP,CAAiBC,YAAjB,GAAgC,UAASC,EAAT,EAAaC,YAAb,EAA2BC,IAA3B,EAAiC;AAC7D,QAAIC,WAAW,KAAKf,SAAL,CAAea,YAAf,CAAf;AACA,QAAI,CAACE,QAAL,EAAc;AACV;AACH;AACD,QAAIC,mBAAmBD,SAASC,gBAAhC;AACA,QAAI,CAACA,gBAAL,EAAuB;AACnB,YAAIC,SAAS,aAAGC,YAAH,CAAgB,eAAKf,IAAL,CAAU,KAAKF,IAAf,EAAqBc,SAASI,IAA9B,CAAhB,EAAqD,MAArD,CAAb;AACAH,2BAAmB,KAAKhB,SAAL,CAAea,YAAf,EAA6BG,gBAA7B,GAAgD,qBAAWI,OAAX,CAAmBH,MAAnB,CAAnE;AACH;AACD,WAAO,KAAKI,IAAL,CAAU;AACbC,iBAASP,SAASO,OADL;AAEbC,cAAMP,iBAAiBF,IAAjB,CAFO;AAGbF,YAAIA;AAHS,KAAV,CAAP;AAKH,CAfD;;AAiBAb,OAAOW,SAAP,CAAiBW,IAAjB,GAAwB,UAASG,WAAT,EAAsB;;AAE1C,QAAI,EAAEA,eAAeA,YAAYF,OAA3B,IAAsCE,YAAYD,IAApD,CAAJ,EAA+D;AAC3D;AACH;;AAED,QAAIE,OAAQ,iBAAOlB,IAAP,IAAe,iBAAOA,IAAP,CAAYmB,WAAvC;AAAA,QACId,KAAKY,YAAYZ,EADrB;;AAGA,QAAIe,SAASC,QAAQ,UAAR,CAAb;AACAD,WAAOE,IAAP,CAAY,QAAZ,EAAsBC,KAAKC,SAAL,CAAeP,WAAf,CAAtB;;AAEAA,kBAAc,iBAAEQ,MAAF,CAASR,WAAT,EAAsB;AAChCC,cAAMA,IAD0B;AAEhCb,YAAIA,EAF4B;AAGhCqB,8BAAsB;AAHU,KAAtB,CAAd;;AAMA,QAAI;AACA,aAAK5B,SAAL,CAAe6B,QAAf,CAAwBV,WAAxB,EAAqC,UAASW,KAAT,EAAgBC,QAAhB,EAA0B,CAE9D,CAFD;AAGH,KAJD,CAIE,OAAOC,GAAP,EAAY,CAAE;AACnB,CAvBD;;AAyBAC,OAAOC,OAAP,GAAiB,IAAIxC,MAAJ,EAAjB","file":"mailer.js","sourcesContent":["/**\r\n * Copyright 2014 eRealm Info & Tech.\r\n *\r\n * Created by Ken on 3/08/2014\r\n */\r\n\r\n'use strict';\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport _ from'lodash';\r\nimport handlebars from 'handlebars';\r\nimport config from '../../config';\r\nimport nodemailer from 'nodemailer';\r\n\r\nconst Mailer = () => {\r\n    this.templates = {\r\n        \"messageReceived\": {\r\n            \"file\": \"message-received.html\",\r\n            \"subject\": \"[ eRealm Info & Tech] Message Received\"\r\n        },\r\n        \"newContactMessage\": {\r\n            \"file\": \"new-contact-message.html\",\r\n            \"subject\": \"[ eRealm Info & Tech] New Message from Customer\"\r\n        },\r\n        \"messagePlanReceived\": {\r\n            \"file\": \"message-projectplan-received.html\",\r\n            \"subject\": \"[ eRealm Info & Tech] ProjectPlan Received\"\r\n        },\r\n        \"newProjectplanMessage\": {\r\n            \"file\": \"new-projectplan-message.html\",\r\n            \"subject\": \"[ eRealm Info & Tech] New ProjectPlan from Customer\"\r\n        }\r\n    };\r\n\r\n    this.path = path.normalize(path.join(__dirname, '../templates/'));\r\n    this.transport = nodemailer.createTransport(config.mail.transport, _.clone(config.mail.options) || {});\r\n}\r\n\r\nMailer.prototype.sendTemplate = function(to, templateName, data) {\r\n    var template = this.templates[templateName];\r\n    if (!template){\r\n        return;\r\n    }\r\n    var compiledTemplate = template.compiledTemplate;\r\n    if (!compiledTemplate) {\r\n        var source = fs.readFileSync(path.join(this.path, template.file), 'utf8');\r\n        compiledTemplate = this.templates[templateName].compiledTemplate = handlebars.compile(source);\r\n    }\r\n    return this.send({\r\n        subject: template.subject,\r\n        html: compiledTemplate(data),\r\n        to: to\r\n    });\r\n};\r\n\r\nMailer.prototype.send = function(mailOptions) {\r\n\r\n    if (!(mailOptions && mailOptions.subject && mailOptions.html)) {\r\n        return;\r\n    }\r\n\r\n    var from = (config.mail && config.mail.fromaddress),\r\n        to = mailOptions.to;\r\n\r\n    var logger = require('./logger');\r\n    logger.info('Mail: ', JSON.stringify(mailOptions));\r\n\r\n    mailOptions = _.extend(mailOptions, {\r\n        from: from,\r\n        to: to,\r\n        generateTextFromHTML: true\r\n    });\r\n\r\n    try {\r\n        this.transport.sendMail(mailOptions, function(error, response) {\r\n\r\n        });\r\n    } catch (err) {}\r\n};\r\n\r\nmodule.exports = new Mailer();\r\n"]}
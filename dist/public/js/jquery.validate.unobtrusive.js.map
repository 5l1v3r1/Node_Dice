{"version":3,"sources":["../../../src/public/js/jquery.validate.unobtrusive.js"],"names":["$","$jQval","validator","adapters","data_validation","setValidationValues","options","ruleName","value","rules","message","messages","splitAndTrim","replace","split","escapeAttributeValue","getModelPrefix","fieldName","substr","lastIndexOf","appendModelPrefix","prefix","indexOf","onError","error","inputElement","container","find","name","replaceAttrValue","attr","parseJSON","removeClass","addClass","data","empty","appendTo","hide","onErrors","event","list","length","errorList","each","html","onSuccess","removeData","onReset","$form","resetForm","validationInfo","form","result","onResetProxy","proxy","errorClass","errorElement","errorPlacement","invalidHandler","success","attachValidation","unbind","bind","validate","valid","unobtrusive","parseElement","element","skipAttach","$element","parents","valInfo","paramValues","undefined","params","adapt","extend","parse","selector","$forms","andSelf","add","filter","info","adapterName","fn","push","addBool","addMinMax","minRuleName","maxRuleName","minMaxRuleName","minAttribute","maxAttribute","min","max","addSingleVal","attribute","addMethod","match","optional","RegExp","exec","index","nonalphamin","methods","extension","other","fullOtherName","tagName","toUpperCase","type","url","additionalfields","i","paramName","val","regex","document","jQuery"],"mappings":"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","file":"jquery.validate.unobtrusive.js","sourcesContent":["/* NUGET: BEGIN LICENSE TEXT\r\n *\r\n * Microsoft grants you the right to use these script files for the sole\r\n * purpose of either: (i) interacting through your browser with the Microsoft\r\n * website or online service, subject to the applicable licensing or use\r\n * terms; or (ii) using the files as included with a Microsoft product subject\r\n * to that product's license terms. Microsoft reserves all other rights to the\r\n * files not expressly granted by Microsoft, whether by implication, estoppel\r\n * or otherwise. Insofar as a script file is dual licensed under GPL,\r\n * Microsoft neither took the code under GPL nor distributes it thereunder but\r\n * under the terms set out in this paragraph. All notices and licenses\r\n * below are for informational purposes only.\r\n *\r\n * NUGET: END LICENSE TEXT */\r\n/*!\r\n** Unobtrusive validation support library for jQuery and jQuery Validate\r\n** Copyright (C) Microsoft Corporation. All rights reserved.\r\n*/\r\n\r\n/*jslint white: true, browser: true, onevar: true, undef: true, nomen: true, eqeqeq: true, plusplus: true, bitwise: true, regexp: true, newcap: true, immed: true, strict: false */\r\n/*global document: false, jQuery: false */\r\n\r\n(function ($) {\r\n    var $jQval = $.validator,\r\n        adapters,\r\n        data_validation = \"unobtrusiveValidation\";\r\n\r\n    function setValidationValues(options, ruleName, value) {\r\n        options.rules[ruleName] = value;\r\n        if (options.message) {\r\n            options.messages[ruleName] = options.message;\r\n        }\r\n    }\r\n\r\n    function splitAndTrim(value) {\r\n        return value.replace(/^\\s+|\\s+$/g, \"\").split(/\\s*,\\s*/g);\r\n    }\r\n\r\n    function escapeAttributeValue(value) {\r\n        // As mentioned on http://api.jquery.com/category/selectors/\r\n        return value.replace(/([!\"#$%&'()*+,./:;<=>?@\\[\\\\\\]^`{|}~])/g, \"\\\\$1\");\r\n    }\r\n\r\n    function getModelPrefix(fieldName) {\r\n        return fieldName.substr(0, fieldName.lastIndexOf(\".\") + 1);\r\n    }\r\n\r\n    function appendModelPrefix(value, prefix) {\r\n        if (value.indexOf(\"*.\") === 0) {\r\n            value = value.replace(\"*.\", prefix);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function onError(error, inputElement) {  // 'this' is the form element\r\n        var container = $(this).find(\"[data-valmsg-for='\" + escapeAttributeValue(inputElement[0].name) + \"']\"),\r\n            replaceAttrValue = container.attr(\"data-valmsg-replace\"),\r\n            replace = replaceAttrValue ? $.parseJSON(replaceAttrValue) !== false : null;\r\n\r\n        container.removeClass(\"field-validation-valid\").addClass(\"field-validation-error\");\r\n        error.data(\"unobtrusiveContainer\", container);\r\n\r\n        if (replace) {\r\n            container.empty();\r\n            error.removeClass(\"input-validation-error\").appendTo(container);\r\n        }\r\n        else {\r\n            error.hide();\r\n        }\r\n    }\r\n\r\n    function onErrors(event, validator) {  // 'this' is the form element\r\n        var container = $(this).find(\"[data-valmsg-summary=true]\"),\r\n            list = container.find(\"ul\");\r\n\r\n        if (list && list.length && validator.errorList.length) {\r\n            list.empty();\r\n            container.addClass(\"validation-summary-errors\").removeClass(\"validation-summary-valid\");\r\n\r\n            $.each(validator.errorList, function () {\r\n                $(\"<li />\").html(this.message).appendTo(list);\r\n            });\r\n        }\r\n    }\r\n\r\n    function onSuccess(error) {  // 'this' is the form element\r\n        var container = error.data(\"unobtrusiveContainer\"),\r\n            replaceAttrValue = container.attr(\"data-valmsg-replace\"),\r\n            replace = replaceAttrValue ? $.parseJSON(replaceAttrValue) : null;\r\n\r\n        if (container) {\r\n            container.addClass(\"field-validation-valid\").removeClass(\"field-validation-error\");\r\n            error.removeData(\"unobtrusiveContainer\");\r\n\r\n            if (replace) {\r\n                container.empty();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onReset(event) {  // 'this' is the form element\r\n        var $form = $(this);\r\n        $form.data(\"validator\").resetForm();\r\n        $form.find(\".validation-summary-errors\")\r\n            .addClass(\"validation-summary-valid\")\r\n            .removeClass(\"validation-summary-errors\");\r\n        $form.find(\".field-validation-error\")\r\n            .addClass(\"field-validation-valid\")\r\n            .removeClass(\"field-validation-error\")\r\n            .removeData(\"unobtrusiveContainer\")\r\n            .find(\">*\")  // If we were using valmsg-replace, get the underlying error\r\n                .removeData(\"unobtrusiveContainer\");\r\n    }\r\n\r\n    function validationInfo(form) {\r\n        var $form = $(form),\r\n            result = $form.data(data_validation),\r\n            onResetProxy = $.proxy(onReset, form);\r\n\r\n        if (!result) {\r\n            result = {\r\n                options: {  // options structure passed to jQuery Validate's validate() method\r\n                    errorClass: \"input-validation-error\",\r\n                    errorElement: \"span\",\r\n                    errorPlacement: $.proxy(onError, form),\r\n                    invalidHandler: $.proxy(onErrors, form),\r\n                    messages: {},\r\n                    rules: {},\r\n                    success: $.proxy(onSuccess, form)\r\n                },\r\n                attachValidation: function () {\r\n                    $form\r\n                        .unbind(\"reset.\" + data_validation, onResetProxy)\r\n                        .bind(\"reset.\" + data_validation, onResetProxy)\r\n                        .validate(this.options);\r\n                },\r\n                validate: function () {  // a validation function that is called by unobtrusive Ajax\r\n                    $form.validate();\r\n                    return $form.valid();\r\n                }\r\n            };\r\n            $form.data(data_validation, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    $jQval.unobtrusive = {\r\n        adapters: [],\r\n\r\n        parseElement: function (element, skipAttach) {\r\n            /// <summary>\r\n            /// Parses a single HTML element for unobtrusive validation attributes.\r\n            /// </summary>\r\n            /// <param name=\"element\" domElement=\"true\">The HTML element to be parsed.</param>\r\n            /// <param name=\"skipAttach\" type=\"Boolean\">[Optional] true to skip attaching the\r\n            /// validation to the form. If parsing just this single element, you should specify true.\r\n            /// If parsing several elements, you should specify false, and manually attach the validation\r\n            /// to the form when you are finished. The default is false.</param>\r\n            var $element = $(element),\r\n                form = $element.parents(\"form\")[0],\r\n                valInfo, rules, messages;\r\n\r\n            if (!form) {  // Cannot do client-side validation without a form\r\n                return;\r\n            }\r\n\r\n            valInfo = validationInfo(form);\r\n            valInfo.options.rules[element.name] = rules = {};\r\n            valInfo.options.messages[element.name] = messages = {};\r\n\r\n            $.each(this.adapters, function () {\r\n                var prefix = \"data-val-\" + this.name,\r\n                    message = $element.attr(prefix),\r\n                    paramValues = {};\r\n\r\n                if (message !== undefined) {  // Compare against undefined, because an empty message is legal (and falsy)\r\n                    prefix += \"-\";\r\n\r\n                    $.each(this.params, function () {\r\n                        paramValues[this] = $element.attr(prefix + this);\r\n                    });\r\n\r\n                    this.adapt({\r\n                        element: element,\r\n                        form: form,\r\n                        message: message,\r\n                        params: paramValues,\r\n                        rules: rules,\r\n                        messages: messages\r\n                    });\r\n                }\r\n            });\r\n\r\n            $.extend(rules, { \"__dummy__\": true });\r\n\r\n            if (!skipAttach) {\r\n                valInfo.attachValidation();\r\n            }\r\n        },\r\n\r\n        parse: function (selector) {\r\n            /// <summary>\r\n            /// Parses all the HTML elements in the specified selector. It looks for input elements decorated\r\n            /// with the [data-val=true] attribute value and enables validation according to the data-val-*\r\n            /// attribute values.\r\n            /// </summary>\r\n            /// <param name=\"selector\" type=\"String\">Any valid jQuery selector.</param>\r\n            var $forms = $(selector)\r\n                .parents(\"form\")\r\n                .andSelf()\r\n                .add($(selector).find(\"form\"))\r\n                .filter(\"form\");\r\n\r\n            // :input is a psuedoselector provided by jQuery which selects input and input-like elements\r\n            // combining :input with other selectors significantly decreases performance.\r\n            $(selector).find(\":input\").filter(\"[data-val=true]\").each(function () {\r\n                $jQval.unobtrusive.parseElement(this, true);\r\n            });\r\n\r\n            $forms.each(function () {\r\n                var info = validationInfo(this);\r\n                if (info) {\r\n                    info.attachValidation();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    adapters = $jQval.unobtrusive.adapters;\r\n\r\n    adapters.add = function (adapterName, params, fn) {\r\n        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation.</summary>\r\n        /// <param name=\"adapterName\" type=\"String\">The name of the adapter to be added. This matches the name used\r\n        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r\n        /// <param name=\"params\" type=\"Array\" optional=\"true\">[Optional] An array of parameter names (strings) that will\r\n        /// be extracted from the data-val-nnnn-mmmm HTML attributes (where nnnn is the adapter name, and\r\n        /// mmmm is the parameter name).</param>\r\n        /// <param name=\"fn\" type=\"Function\">The function to call, which adapts the values from the HTML\r\n        /// attributes into jQuery Validate rules and/or messages.</param>\r\n        /// <returns type=\"jQuery.validator.unobtrusive.adapters\" />\r\n        if (!fn) {  // Called with no params, just a function\r\n            fn = params;\r\n            params = [];\r\n        }\r\n        this.push({ name: adapterName, params: params, adapt: fn });\r\n        return this;\r\n    };\r\n\r\n    adapters.addBool = function (adapterName, ruleName) {\r\n        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where\r\n        /// the jQuery Validate validation rule has no parameter values.</summary>\r\n        /// <param name=\"adapterName\" type=\"String\">The name of the adapter to be added. This matches the name used\r\n        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r\n        /// <param name=\"ruleName\" type=\"String\" optional=\"true\">[Optional] The name of the jQuery Validate rule. If not provided, the value\r\n        /// of adapterName will be used instead.</param>\r\n        /// <returns type=\"jQuery.validator.unobtrusive.adapters\" />\r\n        return this.add(adapterName, function (options) {\r\n            setValidationValues(options, ruleName || adapterName, true);\r\n        });\r\n    };\r\n\r\n    adapters.addMinMax = function (adapterName, minRuleName, maxRuleName, minMaxRuleName, minAttribute, maxAttribute) {\r\n        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where\r\n        /// the jQuery Validate validation has three potential rules (one for min-only, one for max-only, and\r\n        /// one for min-and-max). The HTML parameters are expected to be named -min and -max.</summary>\r\n        /// <param name=\"adapterName\" type=\"String\">The name of the adapter to be added. This matches the name used\r\n        /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r\n        /// <param name=\"minRuleName\" type=\"String\">The name of the jQuery Validate rule to be used when you only\r\n        /// have a minimum value.</param>\r\n        /// <param name=\"maxRuleName\" type=\"String\">The name of the jQuery Validate rule to be used when you only\r\n        /// have a maximum value.</param>\r\n        /// <param name=\"minMaxRuleName\" type=\"String\">The name of the jQuery Validate rule to be used when you\r\n        /// have both a minimum and maximum value.</param>\r\n        /// <param name=\"minAttribute\" type=\"String\" optional=\"true\">[Optional] The name of the HTML attribute that\r\n        /// contains the minimum value. The default is \"min\".</param>\r\n        /// <param name=\"maxAttribute\" type=\"String\" optional=\"true\">[Optional] The name of the HTML attribute that\r\n        /// contains the maximum value. The default is \"max\".</param>\r\n        /// <returns type=\"jQuery.validator.unobtrusive.adapters\" />\r\n        return this.add(adapterName, [minAttribute || \"min\", maxAttribute || \"max\"], function (options) {\r\n            var min = options.params.min,\r\n                max = options.params.max;\r\n\r\n            if (min && max) {\r\n                setValidationValues(options, minMaxRuleName, [min, max]);\r\n            }\r\n            else if (min) {\r\n                setValidationValues(options, minRuleName, min);\r\n            }\r\n            else if (max) {\r\n                setValidationValues(options, maxRuleName, max);\r\n            }\r\n        });\r\n    };\r\n\r\n    adapters.addSingleVal = function (adapterName, attribute, ruleName) {\r\n        /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate validation, where\r\n        /// the jQuery Validate validation rule has a single value.</summary>\r\n        /// <param name=\"adapterName\" type=\"String\">The name of the adapter to be added. This matches the name used\r\n        /// in the data-val-nnnn HTML attribute(where nnnn is the adapter name).</param>\r\n        /// <param name=\"attribute\" type=\"String\">[Optional] The name of the HTML attribute that contains the value.\r\n        /// The default is \"val\".</param>\r\n        /// <param name=\"ruleName\" type=\"String\" optional=\"true\">[Optional] The name of the jQuery Validate rule. If not provided, the value\r\n        /// of adapterName will be used instead.</param>\r\n        /// <returns type=\"jQuery.validator.unobtrusive.adapters\" />\r\n        return this.add(adapterName, [attribute || \"val\"], function (options) {\r\n            setValidationValues(options, ruleName || adapterName, options.params[attribute]);\r\n        });\r\n    };\r\n\r\n    $jQval.addMethod(\"__dummy__\", function (value, element, params) {\r\n        return true;\r\n    });\r\n\r\n    $jQval.addMethod(\"regex\", function (value, element, params) {\r\n        var match;\r\n        if (this.optional(element)) {\r\n            return true;\r\n        }\r\n\r\n        match = new RegExp(params).exec(value);\r\n        return (match && (match.index === 0) && (match[0].length === value.length));\r\n    });\r\n\r\n    $jQval.addMethod(\"nonalphamin\", function (value, element, nonalphamin) {\r\n        var match;\r\n        if (nonalphamin) {\r\n            match = value.match(/\\W/g);\r\n            match = match && match.length >= nonalphamin;\r\n        }\r\n        return match;\r\n    });\r\n\r\n    if ($jQval.methods.extension) {\r\n        adapters.addSingleVal(\"accept\", \"mimtype\");\r\n        adapters.addSingleVal(\"extension\", \"extension\");\r\n    } else {\r\n        // for backward compatibility, when the 'extension' validation method does not exist, such as with versions\r\n        // of JQuery Validation plugin prior to 1.10, we should use the 'accept' method for\r\n        // validating the extension, and ignore mime-type validations as they are not supported.\r\n        adapters.addSingleVal(\"extension\", \"extension\", \"accept\");\r\n    }\r\n\r\n    adapters.addSingleVal(\"regex\", \"pattern\");\r\n    adapters.addBool(\"creditcard\").addBool(\"date\").addBool(\"digits\").addBool(\"email\").addBool(\"number\").addBool(\"url\");\r\n    adapters.addMinMax(\"length\", \"minlength\", \"maxlength\", \"rangelength\").addMinMax(\"range\", \"min\", \"max\", \"range\");\r\n    adapters.addMinMax(\"minlength\", \"minlength\").addMinMax(\"maxlength\", \"minlength\", \"maxlength\");\r\n    adapters.add(\"equalto\", [\"other\"], function (options) {\r\n        var prefix = getModelPrefix(options.element.name),\r\n            other = options.params.other,\r\n            fullOtherName = appendModelPrefix(other, prefix),\r\n            element = $(options.form).find(\":input\").filter(\"[name='\" + escapeAttributeValue(fullOtherName) + \"']\")[0];\r\n\r\n        setValidationValues(options, \"equalTo\", element);\r\n    });\r\n    adapters.add(\"required\", function (options) {\r\n        // jQuery Validate equates \"required\" with \"mandatory\" for checkbox elements\r\n        if (options.element.tagName.toUpperCase() !== \"INPUT\" || options.element.type.toUpperCase() !== \"CHECKBOX\") {\r\n            setValidationValues(options, \"required\", true);\r\n        }\r\n    });\r\n    adapters.add(\"remote\", [\"url\", \"type\", \"additionalfields\"], function (options) {\r\n        var value = {\r\n            url: options.params.url,\r\n            type: options.params.type || \"GET\",\r\n            data: {}\r\n        },\r\n            prefix = getModelPrefix(options.element.name);\r\n\r\n        $.each(splitAndTrim(options.params.additionalfields || options.element.name), function (i, fieldName) {\r\n            var paramName = appendModelPrefix(fieldName, prefix);\r\n            value.data[paramName] = function () {\r\n                return $(options.form).find(\":input\").filter(\"[name='\" + escapeAttributeValue(paramName) + \"']\").val();\r\n            };\r\n        });\r\n\r\n        setValidationValues(options, \"remote\", value);\r\n    });\r\n    adapters.add(\"password\", [\"min\", \"nonalphamin\", \"regex\"], function (options) {\r\n        if (options.params.min) {\r\n            setValidationValues(options, \"minlength\", options.params.min);\r\n        }\r\n        if (options.params.nonalphamin) {\r\n            setValidationValues(options, \"nonalphamin\", options.params.nonalphamin);\r\n        }\r\n        if (options.params.regex) {\r\n            setValidationValues(options, \"regex\", options.params.regex);\r\n        }\r\n    });\r\n\r\n    $(function () {\r\n        $jQval.unobtrusive.parse(document);\r\n    });\r\n}(jQuery));"]}
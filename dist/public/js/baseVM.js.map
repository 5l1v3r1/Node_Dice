{"version":3,"sources":["../../../src/public/js/baseVM.js"],"names":["baseVM","userGuid","ko","observable","userName","coinName","clientsalt","serversalt","preClientSalt","preServerSalt","encrypted","betted","balance","funds","depositAddress","withdawalAmount","withdrawalAddress","betAmount","toFixed","switchCoins","setCoin","amountX2","amount","amountDiv2","minAmount","maxAmount","withdraw","saveWithdrawalAddress","socket","emit","saveClientSalt","refreshBalance","toggleButton","getBalance","copyBalance","generateAddress","autoBetVM","numberofRolls","extend","min","stopWin","stopLoss","incWin","incLoss","baseAmount","incRolls","decRolls","myBetsArray","observableArray","allBetsArray","highRollArray","coinsArray","$","WebSocket","io","connect","transports","cookie","createNewUser","registerSocketEvents","on","coinNames","push","data","error","code","showNotification","setUser","modal","clientSalt","hide","serverSalt","result","address","setInterval","backdrop","click","val","user","userid","hashedServerSalt","expires","Date","getTime","onlineUsersArray","indexOf","length","each","i","f","depositAmount","withdrawAmount","profit","withdrawAddress"],"mappings":"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","file":"baseVM.js","sourcesContent":["ï»¿var baseVM = {\r\n    userGuid: ko.observable(''),\r\n    userName: ko.observable(''),\r\n    coinName: ko.observable('BTC'),\r\n    clientsalt: ko.observable(''),\r\n    serversalt: ko.observable(''),\r\n    preClientSalt: ko.observable(''),\r\n    preServerSalt: ko.observable(''),\r\n    encrypted: ko.observable(),\r\n    betted: ko.observable(false),\r\n    balance: ko.observable(),\r\n    funds: [],\r\n    depositAddress: ko.observable(),\r\n    withdawalAmount: ko.observable(),\r\n    withdrawalAddress: ko.observable(),\r\n    betAmount: ko.observable((0.00000001).toFixed(8)),\r\n    switchCoins: function (coinName) {\r\n        baseVM.coinName(coinName);\r\n        setCoin();\r\n        switch (coinName) { \r\n            case 'BTC': this.betAmount((0.00000001).toFixed(8)); break;\r\n            case 'NXT': this.betAmount(1); break;\r\n        }\r\n    },\r\n    amountX2: function () {\r\n        var amount = this.betAmount();\r\n        this.betAmount((amount * 2).toFixed(8));\r\n    },\r\n    amountDiv2: function () {\r\n        var amount = this.betAmount();\r\n        this.betAmount((amount / 2).toFixed(8));\r\n    },\r\n    minAmount: function () {\r\n        this.betAmount((0.00000001).toFixed(8));\r\n    },\r\n    maxAmount: function () {\r\n        this.betAmount(10);\r\n    },\r\n    withdraw: function () { },\r\n    saveWithdrawalAddress: function () {\r\n        socket.emit('withdrawalAddress', baseVM.coinName(), baseVM.withdrawalAddress());\r\n    },\r\n    saveClientSalt: function () {\r\n        socket.emit('clientSalt', baseVM.clientsalt());\r\n    },\r\n    refreshBalance: function () {\r\n        if (this.toggleButton()) {\r\n            this.toggleButton(false);\r\n            getBalance();\r\n        }\r\n    },\r\n    copyBalance: function () {\r\n        baseVM.withdawalAmount(baseVM.balance());\r\n    },\r\n    toggleButton: ko.observable(true),\r\n    generateAddress: function () {\r\n        if (this.toggleButton()) {\r\n            this.toggleButton(false);\r\n            socket.emit('newCoinAddr', this.coinName());\r\n        }\r\n    }\r\n};\r\nvar autoBetVM = {\r\n    numberofRolls: ko.observable(1).extend({ min: 0 }),\r\n    stopWin: ko.observable('0.00000000'),\r\n    stopLoss: ko.observable('0.0000000'),\r\n    incWin: ko.observable('0.00'),\r\n    incLoss: ko.observable('0.00'),\r\n    baseAmount: ko.observable(0),\r\n    incRolls: function () { this.numberofRolls(this.numberofRolls() + 1); },\r\n    decRolls: function () { this.numberofRolls() - 1 >= 0 ? this.numberofRolls(this.numberofRolls() - 1) : 0; },\r\n};\r\nvar myBetsArray = ko.observableArray();\r\nvar allBetsArray = ko.observableArray();\r\nvar highRollArray = ko.observableArray();\r\nvar coinsArray = ko.observableArray();\r\nvar socket;\r\n$(function () {\r\n    \r\n    if (typeof (WebSocket) != \"function\") {\r\n        socket = io();\r\n    }\r\n    else {\r\n        /* Use websocket only */\r\n        socket = io.connect({ transports: ['websocket'] });\r\n    }\r\n    \r\n    if ($.cookie('newUser') && $.cookie('newUser') == '0') {\r\n        socket.emit('existingUser', '');\r\n    }\r\n    else {\r\n        createNewUser();\r\n    }\r\n    registerSocketEvents();\r\n});\r\n\r\nfunction registerSocketEvents() {\r\n    socket.on('coinNames', function (coinNames) { \r\n        coinsArray.push(coinNames);\r\n    });\r\n\r\n    socket.on('newUser', function (data) {\r\n        if (data.error && data.error.code == 11000) { \r\n            showNotification('Username exists.', 'Please user a different name.', 'danger');\r\n        }\r\n        else {\r\n            setUser(data);\r\n            $('#nameUserModal').modal('hide');\r\n        }\r\n    });\r\n    \r\n    socket.on('existingUser', function (data) {\r\n        if (data.clientSalt == '' && data.error == 'session expired') { \r\n            createNewUser(); //session expired and create a new user\r\n        }\r\n        else {\r\n            setUser(data);\r\n            $(\"#spinner\").hide();\r\n        }\r\n    });\r\n   \r\n    socket.on('savingClientSalt', function (data) {\r\n        if (data.error) {\r\n            showNotification('', data.error, 'danger');\r\n        }\r\n        else {\r\n            baseVM.preClientSalt(data.clientSalt);\r\n            baseVM.preServerSalt(data.serverSalt);\r\n            showNotification('', 'Client salt has been updated.', 'success');\r\n        }\r\n    });\r\n    \r\n    socket.on('withdrawalAddress', function (result) {\r\n        if (result)\r\n            showNotification('', 'Withdrawal address has been updated.', 'success');\r\n        else\r\n            showNotification('', 'Update withdrawal address failed.', 'danger');\r\n    });\r\n\r\n    socket.on('newCoinAddr', function (result) { \r\n        \r\n        if (result.address) {\r\n            baseVM.depositAddress(result.address);\r\n            setInterval(getBalance, 30 * 1000);//refresh balance every 30 seconds for deposits\r\n            showNotification('', 'A new address updated.', 'success');\r\n        } else {\r\n            showNotification('', 'Getting new address failed.', 'danger');\r\n        }\r\n        baseVM.toggleButton(true);\r\n    });\r\n\r\n    socket.on('getBalance', function (result) { \r\n        if (result.balance >= 0)\r\n        {\r\n            baseVM.balance(result.balance.toFixed(8));\r\n            if (baseVM.balance() != result.balance)\r\n            showNotification('', 'Balance updated.', 'success');\r\n        } else {\r\n            showNotification('', 'Getting balance failed.', 'danger');\r\n        }\r\n        baseVM.toggleButton(true);\r\n    });\r\n}\r\n\r\nfunction createNewUser() {\r\n    $(\"#spinner\").hide();\r\n    $('#nameUserModal').modal({ backdrop: 'static' });\r\n    $('#saveUserName').click(function () {\r\n        socket.emit('newUser', $('#txtNameUser').val());\r\n    });\r\n}\r\nfunction setUser(user) {\r\n    baseVM.userGuid(user.userid);\r\n    baseVM.userName(user.userName);\r\n    baseVM.clientsalt(user.clientSalt);\r\n    baseVM.serversalt(user.hashedServerSalt);\r\n    baseVM.funds = user.funds;\r\n    $.cookie('newUser', '0', { expires: new Date((new Date()).getTime() + 30 * 24 * 60 * 60 * 1000) });\r\n    setCoin();\r\n    if (onlineUsersArray) {\r\n        if (onlineUsersArray.indexOf(user) == -1)\r\n            onlineUsersArray.push(user);\r\n    }\r\n}\r\n\r\nfunction setCoin() {\r\n    if (baseVM.funds && baseVM.funds.length > 0) {\r\n        $(baseVM.funds).each(function (i) {\r\n            var f = baseVM.funds[i];\r\n            if (baseVM.coinName() == f.coinName) {\r\n                baseVM.balance((f.depositAmount - f.withdrawAmount + f.profit).toFixed(8));\r\n                baseVM.depositAddress(f.depositAddress);\r\n                if (f.depositAddress != '')\r\n                    setInterval(getBalance, 30 * 1000);//refresh balance every 30 seconds for deposits\r\n                baseVM.withdrawalAddress(f.withdrawAddress);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction getBalance() {\r\n    socket.emit('getBalance', baseVM.coinName());\r\n}"]}
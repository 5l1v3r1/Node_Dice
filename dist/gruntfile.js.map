{"version":3,"sources":["../src/gruntfile.js"],"names":["module","exports","grunt","pkg","file","readJSON","initConfig","asset","version","bower","install","targetDir","verbose","cleanTargetDir","cleanBowerDir","bowerOptions","copy","main","files","expand","cwd","src","dest","images","build","clean","jshint","options","reporter","require","client","jshintrc","ignores","server","lesslint","strict","import","autoprefixer","browsers","debug","compile","imagemin","dynamic","jsbeautifier","js","fileTypes","html","cssmin","less","cleancss","uglify","mangle","banner","useminPrepare","usemin","root","assetsDirs","watch","clientHtml","livereload","clientJS","tasks","clientLess","clientCss","serverJS","serverTemplates","tests","filerev","encoding","algorithm","length","nodemon","dev","script","args","ext","ignore","delayTime","env","PORT","NODE_ENV","callback","on","event","console","log","colour","setTimeout","writeFileSync","concurrent","logConcurrentOutput","loadNpmTasks","option","registerTask"],"mappings":"AAAA;;;;;;AAMA;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAe;AAC5B,QAAIC,MAAMD,MAAME,IAAN,CAAWC,QAAX,CAAoB,cAApB,CAAV;;AAEAH,UAAMI,UAAN,CAAiB;AACbH,aAAKA,GADQ;AAEbI,eAAO,kBAAiBJ,IAAIK,OAFf;AAGbC,eAAO;AACHC,qBAAS;AACLC,2BAAW,eADN;AAELD,yBAAS,IAFJ;AAGLE,yBAAS,IAHJ;AAILC,gCAAgB,IAJX;AAKLC,+BAAe,KALV;AAMLC,8BAAc;AANT;AADN,SAHM;AAabC,cAAM;AACFC,kBAAM;AACFC,uBAAO,CACH;AACIC,4BAAQ,IADZ,EACkBC,KAAK,2BADvB;AAEIC,yBAAK,CAAC,gBAAD,EAAkB,eAAlB,CAFT,EAE6CC,MAAM;AAFnD,iBADG,EAKH;AACIH,4BAAQ,IADZ,EACkBC,KAAK,uBADvB;AAEIC,yBAAK,CAAC,oBAAD,EAAsB,gBAAtB,CAFT,EAEkDC,MAAM;AAFxD,iBALG,EASH;AACIH,4BAAQ,IADZ,EACkBC,KAAK,kCADvB;AAEIC,yBAAK,CAAC,mBAAD,CAFT,EAEgCC,MAAM;AAFtC,iBATG,EAaH;AACIH,4BAAQ,IADZ,EACkBC,KAAK,iCADvB;AAEIC,yBAAK,CAAC,0BAAD,CAFT,EAEuCC,MAAM;AAF7C,iBAbG,EAiBH;AACIH,4BAAQ,IADZ,EACkBC,KAAK,kCADvB;AAEIC,yBAAK,CAAC,IAAD,CAFT,EAEiBC,MAAM;AAFvB,iBAjBG,EAqBH;AACIH,4BAAQ,IADZ,EACkBC,KAAK,+BADvB;AAEIC,yBAAK,CAAC,IAAD,CAFT,EAEiBC,MAAM;AAFvB,iBArBG;AADL,aADJ;AA6BFC,oBAAQ;AACJL,uBAAO;AACH;AACA,kBAACC,QAAQ,IAAT,EAAeC,KAAK,qBAApB,EAA2CC,KAAK,CAAC,IAAD,CAAhD,EAAwDC,MAAM,eAA9D,EAFG;AADH,aA7BN;AAmCFE,mBAAO;AACHN,uBAAO;AACH;AACA,kBAACC,QAAQ,IAAT,EAAeC,KAAK,0BAApB,EAAgDC,KAAK,CAAC,IAAD,CAArD,EAA6DC,MAAM,cAAnE,EAFG;AADJ;AAnCL,SAbO;AAuDbG,eAAO;AACHF,oBAAQ;AACJF,qBAAK,CAAC,qBAAD;AADD,aADL;AAIHG,mBAAO;AACHH,qBAAK,CACD,OADC,EAED,yBAFC,EAE0B,iCAF1B,EAGD,wBAHC,EAGwB,yBAHxB,EAGmD,0BAHnD,EAG+E,yBAH/E,EAG0G,gCAH1G;AADF;AAJJ,SAvDM;AAkEbK,gBAAQ;AACJC,qBAAS;AACLC,0BAAUC,QAAQ,gBAAR;AADL,aADL;AAIJC,oBAAQ;AACJH,yBAAS;AACLI,8BAAU,kBADL;AAELC,6BAAS,CACL,gCADK;AAFJ,iBADL;AAOJX,qBAAK,CACD,4BADC;AAPD,aAJJ;AAeJY,oBAAQ;AACJN,yBAAS;AACLI,8BAAU;AADL,iBADL;AAIJV,qBAAK,CACD,gBADC,EAED,aAFC;AAJD;AAfJ,SAlEK;AA2Fba,kBAAU;AACNC,oBAAQ;AACJR,yBAAS;AACLS,4BAAQ;AADH,iBADL;AAIJf,qBAAK,CAAC,+BAAD;AAJD;AADF,SA3FG;AAmGbgB,sBAAc;;AAEVV,qBAAS;AACLW,0BAAU,CAAC,iBAAD,EAAoB,MAApB;AADL,aAFC;AAKVC,mBAAO;AACHlB,qBAAK;AADF,aALG;AAQVmB,qBAAS;AACLnB,qBAAK;AADA;AARC,SAnGD;AA+GboB,kBAAU;AACNC,qBAAS;AACLxB,uBAAO,CAAC;AACJC,4BAAQ,IADJ;AAEJC,yBAAK,eAFD;AAGJC,yBAAK,CAAC,oBAAD,CAHD;AAIJC,0BAAM;AAJF,iBAAD;AADF;AADH,SA/GG;AAyHbqB,sBAAc;AACVzB,mBAAO,CAAC,aAAD,EAAe,wBAAf,EAAwC,4BAAxC,EAAqE,sBAArE,CADG;AAEVS,qBAAS;AACLiB,oBAAI;AACAC,+BAAW,CAAC,KAAD;AADX,iBADC;AAILC,sBAAM;AACFD,+BAAW,CAAC,OAAD;AADT;AAJD;AAFC,SAzHD;AAoIbE,gBAAQ;AACJvB,mBAAO;AACHG,yBAAS,EADN;AAGHT,uBAAO;AACH,uDACI,CACI,2BADJ;AAFD;AAHJ;AADH,SApIK;AAgJb8B,cAAM;AACFT,mBAAO;AACHZ,yBAAS;AACLsB,8BAAU;AADL,iBADN;AAIH/B,uBAAO;AACH,kDAA8B;AAD3B;AAJJ,aADL;AASFsB,qBAAS;AACLb,yBAAS;AACLsB,8BAAU;AADL,iBADJ;AAIL/B,uBAAO;AACH,sDAAkC;AAD/B;AAJF;AATP,SAhJO;AAkKbgC,gBAAQ;AACJvB,qBAAQ;AACJwB,wBAAQ,IADJ;AAEJC,wBAAQ,mEACJ,8DADI,GAEJ,+BAFI,GAGJ;AALA,aADJ;AAQJ5B,mBAAO;AACHN,uBAAO;AACH,sDAAkC,CAC9B,8BAD8B,EAE9B,wDAF8B,EAG9B,0DAH8B,EAI9B,wDAJ8B,EAK9B,0DAL8B,EAM9B,qEAN8B,EAO9B,yEAP8B,EAQ9B,0DAR8B,EAS9B,uDAT8B,EAU9B,kDAV8B,EAW9B,wDAX8B,CAD/B;AAeH,qDAAiC,CAC7B,8BAD6B,EAE7B,gCAF6B,EAG7B,+BAH6B,EAI7B,6BAJ6B;AAf9B;AADJ;AARH,SAlKK;AAmMbmC,uBAAe;AACXP,kBAAM,yBADK;AAEXnB,qBAAS;AACLL,sBAAM;AADD;AAFE,SAnMF;AAyMbgC,gBAAQ;AACJR,kBAAM,yBADF;AAEJnB,qBAAS;AACL4B,sBAAM,QADD;AAELjC,sBAAM,QAFD;AAGLkC,4BAAY,CAAC,QAAD;AAHP;AAFL,SAzMK;AAiNbC,eAAO;AACHC,wBAAY;AACRxC,uBAAO,CAAC,4BAAD,CADC;AAERS,yBAAS;AACLgC,gCAAY;AADP;AAFD,aADT;AAOHC,sBAAU;AACN1C,uBAAO,CACH,gBADG,EACe,yBADf,CADD;AAIN2C,uBAAO,CAAC,qBAAD,CAJD;AAKNlC,yBAAS;AACLgC,gCAAY;AADP;AALH,aAPP;AAgBHG,wBAAY;AACR5C,uBAAO,CAAC,8BAAD,CADC;AAER2C,uBAAM,CAAC,YAAD,EAAc,oBAAd,CAFE;AAGRlC,yBAAS;AACLgC,gCAAY;AADP;AAHD,aAhBT;AAuBHI,uBAAW;AACP7C,uBAAO,CAAC,0BAAD,CADA;AAEPS,yBAAS;AACLgC,gCAAY;AADP;AAFF,aAvBR;AA6BHK,sBAAU;AACN9C,uBAAO,CAAC,aAAD,CADD;AAEN2C,uBAAO,CAAC,qBAAD;AAFD,aA7BP;AAiCHI,6BAAiB;AACb/C,uBAAO,CAAC,oBAAD,EAAsB,sBAAtB,CADM;AAEbS,yBAAS;AACLgC,gCAAY;AADP;AAFI,aAjCd;AAuCHO,mBAAO;AACHhD,uBAAO,CAAC,eAAD,CADJ;AAEH2C,uBAAO,CAAC,eAAD;AAFJ,aAvCJ;AA2CH5B,oBAAQ;AACJf,uBAAO,CAAC,WAAD,CADH;AAEJS,yBAAS;AACLgC,gCAAY;AADP;AAFL;AA3CL,SAjNM;AAmQbQ,iBAAS;AACLxC,qBAAS;AACLyC,0BAAU,MADL;AAELC,2BAAW,KAFN;AAGLC,wBAAQ;AAHH,aADJ;AAML9C,mBAAO;AACHH,qBAAK,CAAC,6BAAD,EAAgC,8BAAhC;AADF;AANF,SAnQI;AA6QbkD,iBAAS;AACLC,iBAAK;AACDC,wBAAQ,QADP;AAED9C,yBAAS;AACL+C,0BAAM,CAAC,SAAD,CADD;AAELC,yBAAK,IAFA;AAGLC,4BAAQ,CAAC,iBAAD,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAHH;AAILnB,2BAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,WAArB,CAJF;AAKLlB,2BAAO,IALF;AAMLsC,+BAAW,EANN;AAOLC,yBAAK;AACDC,8BAAM,IADL;AAEDC,kCAAU;AAFT,qBAPA;AAWLC,8BAAU,kBAAUV,OAAV,EAAmB;AACzBA,gCAAQW,EAAR,CAAW,KAAX,EAAkB,UAAUC,KAAV,EAAiB;AAC/BC,oCAAQC,GAAR,CAAYF,MAAMG,MAAlB;AACH,yBAFD;;AAIA;AACAf,gCAAQW,EAAR,CAAW,eAAX,EAA4B,YAAY;AACpC;AACAK,uCAAW,YAAW;AAClBH,wCAAQC,GAAR,CAAY,eAAZ;AACAxD,wCAAQ,MAAR,EAAgB,uBAAhB;AACH,6BAHD,EAGG,IAHH;AAIH,yBAND;;AAQA;AACA0C,gCAAQW,EAAR,CAAW,SAAX,EAAsB,YAAY;AAC9B;AACAK,uCAAW,YAAW;AAClB1D,wCAAQ,IAAR,EAAc2D,aAAd,CAA4B,WAA5B,EAAyC,UAAzC;AACH,6BAFD,EAEG,IAFH;AAGH,yBALD;AAMH;AAhCI;AAFR;AADA,SA7QI;AAoTbC,oBAAY;AACR5B,mBAAO,CAAC,aAAD,EAAgB,OAAhB,CADC;AAERlC,qBAAS;AACL+D,qCAAqB;AADhB;AAFD;AApTC,KAAjB;;AA4TAxF,UAAMyF,YAAN,CAAmB,oBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,wBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,oBAAnB;;AAEAzF,UAAMyF,YAAN,CAAmB,gBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,sBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,oBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,eAAnB;AACAzF,UAAMyF,YAAN,CAAmB,eAAnB;AACAzF,UAAMyF,YAAN,CAAmB,qBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,kBAAnB;;AAGAzF,UAAMyF,YAAN,CAAmB,qBAAnB;;AAEAzF,UAAMyF,YAAN,CAAmB,sBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,oBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,sBAAnB;AACAzF,UAAMyF,YAAN,CAAmB,sBAAnB;AACJ;AACIzF,UAAMyF,YAAN,CAAmB,cAAnB;;AAIA;AACAzF,UAAM0F,MAAN,CAAa,OAAb,EAAsB,IAAtB;;AAEA1F,UAAM2F,YAAN,CAAmB,SAAnB,EAA8B,CAAC,WAAD,EAAc,UAAd,EAA0B,aAA1B,EAAyC,cAAzC,EAAwD,cAAxD,CAA9B;AACA3F,UAAM2F,YAAN,CAAmB,SAAnB,EAA8B,CAAC,UAAD,EAAa,QAAb,EAAsB,YAAtB,EAAmC,oBAAnC,EAAyD,YAAzD,CAA9B;AACA3F,UAAM2F,YAAN,CAAmB,OAAnB,EAA4B,CAAC,QAAD,EAAW,cAAX,EAA0B,sBAA1B,EAAkD,QAAlD,EAA2D,SAA3D,EAAsE,QAAtE,EAAgF,YAAhF,EAA8F,aAA9F,CAA5B;AACH,CA7VD","file":"gruntfile.js","sourcesContent":["/**\r\n * Copyright 2014 Bestinet Sdn.Bhd.\r\n *\r\n * Created by dang on 14/03/2014\r\n */\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = function(grunt){\r\n    var pkg = grunt.file.readJSON('package.json');\r\n\r\n    grunt.initConfig({\r\n        pkg: pkg,\r\n        asset: 'public/asset-'+ pkg.version,\r\n        bower: {\r\n            install: {\r\n                targetDir: \"public/vendor\",\r\n                install: true,\r\n                verbose: true,\r\n                cleanTargetDir: true,\r\n                cleanBowerDir: false,\r\n                bowerOptions: {}\r\n            }\r\n        },\r\n        copy: {\r\n            main: {\r\n                files: [\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/jQuery/dist',\r\n                        src: ['jquery.min.map','jquery.min.js'], dest: \"public/javascripts/libs\"\r\n                    },\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/angular',\r\n                        src: ['angular.min.js.map','angular.min.js'], dest: \"public/javascripts/libs\"\r\n                    },\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/bootstrap/dist/css',\r\n                        src: ['bootstrap.min.css'], dest: \"public/stylesheets/libs\"\r\n                    },\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/angular-bootstrap',\r\n                        src: ['ui-bootstrap-tpls.min.js'], dest: \"public/javascripts/libs/plugins\"\r\n                    },\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/font-awesome/fonts',\r\n                        src: ['**'], dest: \"public/stylesheets/fonts\"\r\n                    },\r\n                    {\r\n                        expand: true, cwd: 'public/vendor/bootstrap/fonts',\r\n                        src: ['**'], dest: \"public/stylesheets/fonts\"\r\n                    }\r\n                ]\r\n            },\r\n            images: {\r\n                files: [\r\n                    // copy minified images\r\n                    {expand: true, cwd: 'public/images-build', src: ['**'], dest: 'public/images'}\r\n                ]\r\n            },\r\n            build: {\r\n                files: [\r\n                    // copy minified images\r\n                    {expand: true, cwd: 'public/stylesheets/fonts', src: ['**'], dest: 'public/fonts'}\r\n                ]\r\n            }\r\n        },\r\n        clean: {\r\n            images: {\r\n                src: ['public/images-build']\r\n            },\r\n            build: {\r\n                src: [\r\n                    'build',\r\n                    'public/stylesheets/**/*', \"!public/stylesheets/*.min.*.css\",\r\n                    'public/javascripts/app','public/javascripts/*.js', 'public/javascripts/debug', 'public/javascripts/libs', \"!public/javascripts/*.min.*.js\"]\r\n            }\r\n        },\r\n        jshint: {\r\n            options: {\r\n                reporter: require('jshint-stylish')\r\n            },\r\n            client: {\r\n                options: {\r\n                    jshintrc: '.jshintrc-client',\r\n                    ignores: [\r\n                        'public/javascripts/**/*.min.js'\r\n                    ]\r\n                },\r\n                src: [\r\n                    'public/javascripts/**/*.js'\r\n                ]\r\n            },\r\n            server: {\r\n                options: {\r\n                    jshintrc: '.jshintrc-server'\r\n                },\r\n                src: [\r\n                    'config/**/*.js',\r\n                    'app/**/*.js'\r\n                ]\r\n            }\r\n        },\r\n        lesslint: {\r\n            strict: {\r\n                options: {\r\n                    import: 2\r\n                },\r\n                src: ['public/stylesheets/app/*.less']\r\n            }\r\n        },\r\n        autoprefixer: {\r\n\r\n            options: {\r\n                browsers: ['last 2 versions', 'ie 9']\r\n            },\r\n            debug: {\r\n                src: 'public/stylesheets/app.css'\r\n            },\r\n            compile: {\r\n                src: 'public/stylesheets/app.min.css'\r\n            }\r\n        },\r\n        imagemin: {\r\n            dynamic: {\r\n                files: [{\r\n                    expand: true,\r\n                    cwd: 'public/images',\r\n                    src: ['**/*.{png,jpg,gif}'],\r\n                    dest: 'public/images-build/'\r\n                }]\r\n            }\r\n        },\r\n        jsbeautifier: {\r\n            files: ['app/**/*.js','public/javascript/*.js','public/javascript/app/*.js','app/templates/*.html'],\r\n            options: {\r\n                js: {\r\n                    fileTypes: ['.js']\r\n                },\r\n                html: {\r\n                    fileTypes: ['.html']\r\n                }\r\n            }\r\n        },\r\n        cssmin: {\r\n            build: {\r\n                options: {\r\n                },\r\n                files: {\r\n                    'public/stylesheets/libs.min.css':\r\n                        [\r\n                            \"public/stylesheets/libs/*\"\r\n                        ]\r\n                }\r\n            }\r\n        },\r\n        less: {\r\n            debug: {\r\n                options: {\r\n                    cleancss: false\r\n                },\r\n                files: {\r\n                    'public/stylesheets/app.css': 'public/stylesheets/app.less'\r\n                }\r\n            },\r\n            compile: {\r\n                options: {\r\n                    cleancss: true\r\n                },\r\n                files: {\r\n                    'public/stylesheets/app.min.css': 'public/stylesheets/app.less'\r\n                }\r\n            }\r\n        },\r\n        uglify: {\r\n            options:{\r\n                mangle: true,\r\n                banner: '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version + \"\\\\n\" %>' +\r\n                    '* <%= grunt.template.today(\"yyyy-mm-dd HH:MM:ss\") + \"\\\\n\" %>' +\r\n                    '* <%= pkg.homepage + \"\\\\n\" %>' +\r\n                    '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> - <%= pkg.author %> */ <%= \"\\\\n\" %>'\r\n            },\r\n            build: {\r\n                files: {\r\n                    'public/javascripts/libs.min.js': [\r\n                        'public/javascripts/libs/*.js',\r\n                        'public/javascripts/libs/plugins/jquery.wookmark.min.js',\r\n                        'public/javascripts/libs/plugins/imagesloaded.pkgd.min.js',\r\n                        'public/javascripts/libs/plugins/angular-cookies.min.js',\r\n                        'public/javascripts/libs/plugins/angular-translate.min.js',\r\n                        'public/javascripts/libs/plugins/angular-translate-loader-url.min.js',\r\n                        'public/javascripts/libs/plugins/angular-translate-storage-cookie.min.js',\r\n                        'public/javascripts/libs/plugins/ui-bootstrap-tpls.min.js',\r\n                        'public/javascripts/libs/plugins/ng-mobile-menu.min.js',\r\n                        'public/javascripts/libs/plugins/bootstrap.min.js',\r\n                        'public/javascripts/libs/plugins/moment-with-locales.js'\r\n\r\n                    ] ,\r\n                    'public/javascripts/app.min.js': [\r\n                        'public/javascripts/erealm.js',\r\n                        'public/javascripts/language.js',\r\n                        'public/javascripts/clients.js',\r\n                        'public/javascripts/app/*.js'\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        useminPrepare: {\r\n            html: 'app/views/layouts/*.hbs',\r\n            options: {\r\n                dest: 'public'\r\n            }\r\n        },\r\n        usemin: {\r\n            html: 'app/views/layouts/*.hbs',\r\n            options: {\r\n                root: 'public',\r\n                dest: 'public',\r\n                assetsDirs: ['public']\r\n            }\r\n        },\r\n        watch: {\r\n            clientHtml: {\r\n                files: ['public/templates/**/*.html'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            },\r\n            clientJS: {\r\n                files: [\r\n                    'public/**/*.js', '!client/app/**/*.min.js'\r\n                ],\r\n                tasks: ['newer:jshint:client'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            },\r\n            clientLess: {\r\n                files: ['public/stylesheets/**/*.less'],\r\n                tasks:['less:debug','autoprefixer:debug'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            },\r\n            clientCss: {\r\n                files: ['public/stylesheets/*.css'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            },\r\n            serverJS: {\r\n                files: ['app/**/*.js'],\r\n                tasks: ['newer:jshint:server']\r\n            },\r\n            serverTemplates: {\r\n                files: ['app/views/**/*.hbs','app/templates/*.html'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            },\r\n            tests: {\r\n                files: ['tests/**/*.js'],\r\n                tasks: ['mochacov:test']\r\n            },\r\n            server: {\r\n                files: ['.rebooted'],\r\n                options: {\r\n                    livereload: true\r\n                }\r\n            }\r\n        },\r\n        filerev: {\r\n            options: {\r\n                encoding: 'utf8',\r\n                algorithm: 'md5',\r\n                length: 8\r\n            },\r\n            build: {\r\n                src: ['public/javascripts/*.min.js', 'public/stylesheets/*.min.css']\r\n            }\r\n        },\r\n        nodemon: {\r\n            dev: {\r\n                script: 'app.js',\r\n                options: {\r\n                    args: ['--debug'],\r\n                    ext: 'js',\r\n                    ignore: ['node_modules/**', '.git/**', '.idea/', '.cache/'],\r\n                    watch: ['config', 'app/**', 'public/**'],\r\n                    debug: true,\r\n                    delayTime: 10,\r\n                    env: {\r\n                        PORT: 3000,\r\n                        NODE_ENV: 'development'\r\n                    },\r\n                    callback: function (nodemon) {\r\n                        nodemon.on('log', function (event) {\r\n                            console.log(event.colour);\r\n                        });\r\n\r\n                        // opens browser on initial server start\r\n                        nodemon.on('config:update', function () {\r\n                            // Delay before server listens on port\r\n                            setTimeout(function() {\r\n                                console.log('start browser');\r\n                                require('open')('http://localhost:3000');\r\n                            }, 1000);\r\n                        });\r\n\r\n                        // refreshes browser when server reboots\r\n                        nodemon.on('restart', function () {\r\n                            // Delay before server listens on port\r\n                            setTimeout(function() {\r\n                                require('fs').writeFileSync('.rebooted', 'rebooted');\r\n                            }, 1000);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        concurrent: {\r\n            tasks: ['nodemon:dev', 'watch'],\r\n            options: {\r\n                logConcurrentOutput: true\r\n            }\r\n        }\r\n    });\r\n\r\n    grunt.loadNpmTasks('grunt-contrib-copy');\r\n    grunt.loadNpmTasks('grunt-contrib-imagemin');\r\n    grunt.loadNpmTasks('grunt-jsbeautifier');\r\n\r\n    grunt.loadNpmTasks('grunt-lesslint');\r\n    grunt.loadNpmTasks('grunt-contrib-jshint');\r\n    grunt.loadNpmTasks('grunt-autoprefixer');\r\n    grunt.loadNpmTasks('grunt-filerev');\r\n    grunt.loadNpmTasks('grunt-nodemon');\r\n    grunt.loadNpmTasks('grunt-contrib-watch');\r\n    grunt.loadNpmTasks('grunt-concurrent');\r\n\r\n\r\n    grunt.loadNpmTasks('grunt-contrib-clean');\r\n\r\n    grunt.loadNpmTasks('grunt-contrib-cssmin');\r\n    grunt.loadNpmTasks('grunt-contrib-less');\r\n    grunt.loadNpmTasks('grunt-contrib-concat');\r\n    grunt.loadNpmTasks('grunt-contrib-uglify');\r\n//    grunt.loadNpmTasks('grunt-useminPrepare');\r\n    grunt.loadNpmTasks('grunt-usemin');\r\n\r\n\r\n\r\n    //Making grunt default to force in order not to break the project.\r\n    grunt.option('force', true);\r\n\r\n    grunt.registerTask('prepare', ['copy:main', 'imagemin', 'copy:images', 'clean:images','jsbeautifier']);\r\n    grunt.registerTask('default', ['lesslint', 'jshint','less:debug','autoprefixer:debug', \"concurrent\"]);\r\n    grunt.registerTask('build', ['cssmin', 'less:compile','autoprefixer:compile', 'uglify','filerev', 'usemin', 'copy:build', 'clean:build']);\r\n};"]}